# Netiscope configuration

#####################################
# general configuration goes here
[main]

# how much to log: detail | info | warning | error
#loglevel = detail

# enable colored output
#color

# ignore address families
#skip_ipv4
#skip_ipv6

# force address families
#force_ipv4
#force_ipv6

# how many ping packets to use
#ping_packets = 3

#####################################
# which checks to execute
[checks]

network_interfaces
dns_local_resolvers
dns_open_resolvers # covers 1111, 8888, 9999 but these can be used separately too
#1111
#8888
#9999
dns_root_servers
port_filtering

#####################################
[dns]

# what check to do against DNS servers/resolvers
ping
query

# name (multiple) is/are the FQDNs to use for DNS resolver checks
name = "google.com"
name = "facebook.com"
name = "twitter.com"
name = "cloudflare.com"
name = "wikipedia.org"

# tld (multiple) is/are the TLDs (top level domains) to use for DNS root server checks
tld = "com"
tld = "org"
tld = "io"
tld = "tw"

# ask this many random TLDs from DNS root servers
#random = 3

#####################################
[port_filtering]

# which port+target+protocol to test
port_check = "ssh.test.netiscope.net,22,TCP"
port_check = "telnet.test.netiscope.net,23,TCP"
port_check = "smtp.test.netiscope.net,25,TCP"
port_check = "dns.test.netiscope.net,53,TCP"
port_check = "dns.test.netiscope.net,53,UDP"
port_check = "http.test.netiscope.net,80,TCP"
port_check = "pop3.test.netiscope.net,110,TCP"
port_check = "ntp.test.netiscope.net,123,UDP"
port_check = "imap.test.netiscope.net,143,TCP"
port_check = "https.test.netiscope.net,443,TCP"
port_check = "pop3s.test.netiscope.net,995,TCP"

# netiscope_response controls if the response should be sanity checked or not
# if it is not enabled then only the connection establishment is tried
# if it is enabled then the response is also checked, expected to be "Netiscope\n"
netiscope_response

# network timout for connections and reads while doing port filtering cecks
#timeout = 3
